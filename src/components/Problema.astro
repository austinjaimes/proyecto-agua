---
---
<section class="problema" id="problema">
  <div class="container">
    <h2>üíß La Escasez de Agua en Iguala</h2>
    <p>
      En Iguala, el acceso al agua potable enfrenta desaf√≠os importantes. Muchas
      colonias sufren cortes frecuentes y el desperdicio afecta la disponibilidad
      del recurso. Es fundamental concientizar sobre su uso responsable.
    </p>

    <div class="stats">
      <div class="stat">
        <h3 class="counter" data-target="40">0%</h3>
        <p>de los hogares reportan cortes de agua peri√≥dicos.</p>
      </div>
      <div class="stat">
        <h3 class="counter" data-target="30">0%</h3>
        <p>del agua se pierde por fugas en la red de distribuci√≥n.</p>
      </div>
      <div class="stat">
        <h3>1 de cada 4</h3>
        <p>personas tienen dificultades para acceder al agua potable diariamente.</p>
      </div>
    </div>
  </div>
</section>

<style>
* { box-sizing: border-box; }

.problema {
  padding: 5rem 2rem;
  background: linear-gradient(180deg, #e0f7fa, #b2ebf2);
  color: #004d40;
}

.container {
  max-width: 1100px;
  margin: 0 auto;
  text-align: center;
}

.problema h2 {
  font-size: 2.5rem;
  font-weight: 800;
  margin-bottom: 1rem;
  color: #0077b6;
}

.problema p {
  font-size: 1.15rem;
  margin-bottom: 3rem;
  line-height: 1.7;
}

.stats {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  gap: 2rem;
}

.stat {
  background: #ffffffaa;
  padding: 2rem;
  border-radius: 15px;
  flex: 1 1 250px;
  box-shadow: 0 6px 15px rgba(0,0,0,0.1);
}

.stat h3 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  color: #0077b6;
}

.stat p {
  font-size: 1.2rem;
  color: #004d40;
}

@media (max-width: 768px) {
  .stats {
    flex-direction: column;
    gap: 1.5rem;
  }
}
</style>

<script is:client>
document.addEventListener("DOMContentLoaded", () => {
  const counters = document.querySelectorAll('.counter');

  const animateCounter = (counter) => {
    const target = +counter.dataset.target;
    let count = 0;
    const increment = target / 200; // mayor n√∫mero ‚Üí m√°s lento
    const update = () => {
      count += increment;
      if(count < target){
        counter.innerText = Math.ceil(count) + '%';
        requestAnimationFrame(update);
      } else {
        counter.innerText = target + '%';
      }
    };
    update();
  };

  const problemaSection = document.getElementById('problema');
  let animated = false;

  const observer = new IntersectionObserver((entries, obs) => {
    entries.forEach(entry => {
      if(entry.isIntersecting && !animated){
        counters.forEach(counter => animateCounter(counter));
        animated = true;
        obs.disconnect();
      }
    });
  }, { 
    threshold: 0.1,           // menor porcentaje para que se active
    rootMargin: '0px 0px -50px 0px' // activa un poco antes
  });

  observer.observe(problemaSection);
});
</script>
